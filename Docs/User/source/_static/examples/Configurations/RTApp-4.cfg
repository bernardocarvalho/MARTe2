$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }
        +GAMFixed1 = {
            Class = FixedGAMExample1
            Gain = 2
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
            OutputSignals = {
                GainCounter = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }
        +GAMGroup1 = {
            Class = ParentGAMGroupExample1
            Model = {{2, 0, 0}, {0, 3, 0}, {1, 0, 4}}
            +GAMChild1 = {
                Class = ChildGAMGroupExample1
                InputSignals = {
                    Signal3 = {
                        DataSource = DDB1
                        Type = uint32
                        NumberOfDimensions = 1
                        NumberOfElements = 3
                    }
                }
                OutputSignals = {
                    Signal1 = {
                        DataSource = DDB1
                        Type = uint32
                        NumberOfDimensions = 1 
                        NumberOfElements = 3
                        Default = {1, 1, 1}
                    }
                 }
            } 
            +GAMChild2 = {
                Class = ChildGAMGroupExample2
                InputSignals = {
                    Signal1 = {
                        DataSource = DDB1
                        Type = uint32
                        NumberOfDimensions = 1
                        NumberOfElements = 3
                    }
                }
                OutputSignals = {
                    Signal2 = {
                        DataSource = DDB1
                        Type = uint32
                        NumberOfDimensions = 1 
                        NumberOfElements = 3
                        Default = {1, 1, 1}
                    }
                 }
            }
            +GAMChild3 = {
                Class = ChildGAMGroupExample1
                InputSignals = {
                    Signal2 = {
                        DataSource = DDB1
                        Type = uint32
                        NumberOfDimensions = 1 
                        NumberOfElements = 3
                    }
                }
                OutputSignals = {
                    Signal3 = {
                        DataSource = DDB1
                        Type = uint32
                        NumberOfDimensions = 1 
                        NumberOfElements = 3
                        Default = {1, 1, 1}
                    }
                }
             }
        }
        +GAMDisplay = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                GainCounter = {
                    DataSource = DDB1
                    Type = uint32
                }
                Signal1 = {
                    DataSource = DDB1
                    Type = uint32
                }
                Signal2 = {
                    DataSource = DDB1
                    Type = uint32
                }
                //Print only the first and the last element of Signal 3
                Signal3 = {
                    DataSource = DDB1
                    Type = uint32
                    Ranges = {{0,0}, {2, 2}}
                    NumberOfElements = 3
                    NumberOfDimensions = 1
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = LoggerDataSource
                    Type = uint32
                }
                GainCounter = {
                    DataSource = LoggerDataSource
                    Type = uint32
                } 
                Signal1 = {
                    DataSource = LoggerDataSource
                    Type = uint32
                    NumberOfElements = 3
                    NumberOfDimensions = 1
                }              
                Signal2 = {
                    DataSource = LoggerDataSource
                    Type = uint32
                    NumberOfElements = 3
                    NumberOfDimensions = 1
                }
                Signal3FirstAndLast = {
                    DataSource = LoggerDataSource
                    Type = uint32
                    NumberOfElements = 2
                    NumberOfDimensions = 1
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    //Note that only the GAMGroup1 has to be scheduled for execution (all the GAMGroup child GAMs will be automatically executed)
                    Functions = {GAMTimer GAMFixed1 GAMGroup1 GAMDisplay }
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
