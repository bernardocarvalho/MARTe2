+TCPMessageProxy = {
    Class = TCPSocketMessageProxyExample
    Port = 24680
}

+AppKiller = {
    Class = ApplicationKiller
}

+NcursesInt = {
    Class = NcursesInterface
}

+StateMachine = {
    Class = StateMachine
    +INITIAL = {    //Launches the TestApp
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "ERROR"
            Timeout = 0
            
            +PrepareChangeToAppIdle = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = AppIdle
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }       
        }
        +GOTOERROR  = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
            Timeout = 0
        }
    }
    +IDLE = {
        Class = ReferenceContainer
        +GOTOKEYPRESSED = {
            Class = StateMachineEvent
            NextState = "KEYPRESSED"
            NextStateError = "ERROR"
            Timeout = 0
            +PrepareChangeToAppKeyPressedMsg = {
                Class = Message
                Destination = TestApp
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = AppKeyPressed
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
            }  
        }
        +GOTOERROR  = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
            Timeout = 0
        }
    }
    +KEYPRESSED = {
        Class = ReferenceContainer
        +GOTOIDLE = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "ERROR"
            Timeout = 0
            +PrepareChangeToAppIdleMsg = {
                Class = Message
                Destination = TestApp
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = AppIdle
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
            }  
        }
        +GOTOERROR  = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
            Timeout = 0
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
            Timeout = 0
            +StopAppMsg = {
                Class = Message
                Destination = AppKiller
                Function = Kill
            }
        }
    }
}

$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +CheckKeyPressGAM = {
            Class = KeyPressedGAM
            InputSignals = {
                Counter = {
                    Frequency = 100
                    DataSource = Timer
                    Type = int32
                }
            }
        }
        +ActionKeyGAM = {
            Class = KeyActionGAM        
            InputSignals = {
                Counter = {
                    Frequency = 100
                    DataSource = Timer
                    Type = int32
                }
            } 
        }       
    }
    +Data = {
        Class = ReferenceContainer

        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +AppIdle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {CheckKeyPressGAM}
                }
            }
        }
        +AppKeyPressed = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {ActionKeyGAM}
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}